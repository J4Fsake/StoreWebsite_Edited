<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<!DOCTYPE html>
<html>
<head>
    <title>Chat v·ªõi Admin</title>
    <style>
        #chat-button {
            position: fixed;
            bottom: 100px;
            right: 20px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: #007bff;
            color: white;
            font-size: 24px;
            border: none;
            z-index: 1000;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #chat-button #unread-count {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: red;
            color: white;
            border-radius: 50%;
            padding: 2px 5px;
            font-size: 14px;
            display: none;
        }

        #chat-box {
            display: none;
            position: fixed;
            bottom: 170px;
            right: 20px;
            width: 320px;
            height: 400px;
            background: white;
            border: 1px solid #ccc;
            box-shadow: 0 0 10px rgba(0,0,0,0.2);
            padding: 10px;
            z-index: 1000;
            overflow: hidden;
            opacity: 0; /* B·∫Øt ƒë·∫ßu v·ªõi ƒë·ªô m·ªù 0 */
            transition: opacity 0.3s ease-in-out; /* Hi·ªáu ·ª©ng chuy·ªÉn ƒë·ªïi m·ªù */
        }

        #messages {
            height: 320px;
            overflow-y: auto;
        }

        .message {
            padding: 5px 10px;
            margin: 5px;
            border-radius: 10px;
            max-width: 80%;
            clear: both;
        }

        .own {
            background-color: #dcf8c6;
            float: right;
            text-align: right;
        }

        .other {
            background-color: #f1f0f0;
            float: left;
            text-align: left;
        }
    </style>
</head>
<body>

<button id="chat-button" onclick="toggleChat()">
    üí¨
    <span id="unread-count">0</span>
</button>

<div id="chat-box">
    <div id="messages"></div>
    <input type="text" id="msgInput" placeholder="Nh·∫≠p tin..." style="width: 80%;">
    <button onclick="sendMessage()">G·ª≠i</button>
</div>

<script>
    const sender = "${loggedCustomer.id}"; // G√°n ID ng∆∞·ªùi d√πng
    const receiver = "admin"; // G√°n ID ng∆∞·ªùi nh·∫≠n
    const socket = new WebSocket("ws://localhost:9999/StoreWebsite/chat/" + sender);

    let unreadCount = 0;

    // H√†m toggle chat: m·ªü/ƒë√≥ng khung chat
    function toggleChat() {
        const chatBox = document.getElementById("chat-box");
        if (chatBox.style.display === "none" || chatBox.style.display === "") {
            // M·ªü khung chat
            chatBox.style.display = "block";
            setTimeout(() => { chatBox.style.opacity = 1; }, 10);  // Fade in (khi m·ªü)

            // L·∫•y l·ªãch s·ª≠ chat khi m·ªü
            fetch("/StoreWebsite/loadChat?user1=" + sender + "&user2=" + receiver)
                .then(res => res.json())
                .then(data => {
                    document.getElementById("messages").innerHTML = ""; // X√≥a tin nh·∫Øn c≈©
                    data.forEach(msg => {
                        displayMessage(msg);
                    });
                });

            // Reset s·ªë tin nh·∫Øn ch∆∞a ƒë·ªçc khi m·ªü chat
            unreadCount = 0;
            updateUnreadCount();
        } else {
            // T·∫Øt khung chat
            chatBox.style.opacity = 0;
            setTimeout(() => { chatBox.style.display = "none"; }, 300);  // Fade out (khi ƒë√≥ng)
        }
    }

    // Nh·∫≠n tin nh·∫Øn qua WebSocket
    socket.onmessage = function (event) {
        const msg = JSON.parse(event.data);
        // Ch·ªâ hi·ªÉn th·ªã n·∫øu tin nh·∫Øn thu·ªôc v·ªÅ c·∫∑p ƒëang chat
        if ((msg.sender === sender && msg.receiver === receiver) ||
            (msg.sender === receiver && msg.receiver === sender)) {
            displayMessage(msg);

            // N·∫øu khung chat ƒëang ƒë√≥ng, tƒÉng s·ªë l∆∞·ª£ng tin nh·∫Øn ch∆∞a ƒë·ªçc
            if (document.getElementById("chat-box").style.display === "none") {
                unreadCount++;
                updateUnreadCount();
            }
        }
    };

    // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng tin nh·∫Øn ch∆∞a ƒë·ªçc tr√™n n√∫t chat
    function updateUnreadCount() {
        const unreadCountElement = document.getElementById("unread-count");
        unreadCountElement.innerText = unreadCount;
        unreadCountElement.style.display = unreadCount > 0 ? "inline-block" : "none";
    }

    // G·ª≠i tin nh·∫Øn qua WebSocket
    function sendMessage() {
        const input = document.getElementById("msgInput");
        const content = input.value.trim();
        if (!content) return;
        const msg = { sender, receiver, content };
        socket.send(JSON.stringify(msg));
        input.value = "";  // X√≥a input sau khi g·ª≠i
    }

    // Hi·ªÉn th·ªã tin nh·∫Øn trong khung chat
    function displayMessage(msg) {
        const div = document.createElement("div");
        div.className = "message " + (msg.sender === sender ? "own" : "other");
        div.innerText = msg.content;
        document.getElementById("messages").appendChild(div);
        document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight;
    }

    // NgƒÉn vi·ªác xu·ªëng d√≤ng khi nh·∫•n Enter trong input
    document.getElementById("msgInput").addEventListener("keydown", function(event) {
        if (event.key === "Enter") {
            event.preventDefault(); // NgƒÉn vi·ªác xu·ªëng d√≤ng
            sendMessage();
        }
    });
</script>

</body>
</html>
